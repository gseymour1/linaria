// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`does not output CSS if none present 1`] = `
"const number = 42;
const title = String.raw\`This is something\`;"
`;

exports[`does not output CSS if none present 2`] = `Object {}`;

exports[`evaluates and inlines expressions in scope 1`] = `
"const color = 'blue';
const Title =
/*#__PURE__*/
styled(\\"h1\\")({
  name: \\"Title\\",
  class: \\"th6xni0\\"
});"
`;

exports[`evaluates and inlines expressions in scope 2`] = `

CSS:

.th6xni0 {
  color: blue;
  width: 33.333333333333336%;
}

Dependencies: NA

`;

exports[`handles css template literal in JSX element 1`] = `"<Title class={\\"th6xni0\\"} />;"`;

exports[`handles css template literal in JSX element 2`] = `

CSS:

.th6xni0 { font-size: 14px; }

Dependencies: NA

`;

exports[`handles css template literal in object property 1`] = `
"const components = {
  title: \\"th6xni0\\"
};"
`;

exports[`handles css template literal in object property 2`] = `

CSS:

.th6xni0 {
    font-size: 14px;
  }

Dependencies: NA

`;

exports[`handles interpolation followed by unit 1`] = `
"const Title =
/*#__PURE__*/
styled(\\"h1\\")({
  name: \\"Title\\",
  class: \\"th6xni0\\",
  vars: {
    \\"th6xni0-0\\": [size, \\"em\\"],
    \\"th6xni0-1\\": [shadow, \\"px\\"],
    \\"th6xni0-2\\": [size, \\"px\\"],
    \\"th6xni0-3\\": [props => props.width, \\"vw\\"],
    \\"th6xni0-4\\": [props => {
      if (true) {
        return props.height;
      } else {
        return 200;
      }
    }, \\"px\\"],
    \\"th6xni0-5\\": [unit, \\"fr\\"],
    \\"th6xni0-7\\": [function (props) {
      return 200;
    }, \\"px\\"]
  }
});"
`;

exports[`handles interpolation followed by unit 2`] = `

CSS:

.th6xni0 {
  font-size: var(--th6xni0-0);
  text-shadow: black 1px var(--th6xni0-1), white -2px -2px;
  margin: var(--th6xni0-2);
  width: calc(2 * var(--th6xni0-3));
  height: var(--th6xni0-4);
  grid-template-columns: var(--th6xni0-5) 1fr 1fr var(--th6xni0-5);
  border-radius: var(--th6xni0-7)
}

Dependencies: NA

`;

exports[`handles nested blocks 1`] = `
"const Button =
/*#__PURE__*/
styled(\\"button\\")({
  name: \\"Button\\",
  class: \\"bh6xni0\\",
  vars: {
    \\"bh6xni0-0\\": [regular]
  }
});"
`;

exports[`handles nested blocks 2`] = `

CSS:

.bh6xni0 {
  font-family: var(--bh6xni0-0);

  &:hover {
    border-color: blue;
  }

  @media (max-width: 200px) {
    width: 100%;
  }
}

Dependencies: NA

`;

exports[`inlines object styles as CSS string 1`] = `
"const cover = {
  position: 'absolute',
  top: 0,
  right: 0,
  bottom: 0,
  left: 0,
  opacity: 1,
  minHeight: 420,
  '@media (min-width: 200px)': {
    WebkitOpacity: .8,
    MozOpacity: .8,
    msOpacity: .8,
    OOpacity: .8,
    WebkitBorderRadius: 2,
    MozBorderRadius: 2,
    msBorderRadius: 2,
    OBorderRadius: 2,
    WebkitTransition: '400ms',
    MozTransition: '400ms',
    OTransition: '400ms',
    msTransition: '400ms'
  }
};
const Title =
/*#__PURE__*/
styled(\\"h1\\")({
  name: \\"Title\\",
  class: \\"th6xni0\\"
});"
`;

exports[`inlines object styles as CSS string 2`] = `

CSS:

.th6xni0 {
  position: absolute; top: 0; right: 0; bottom: 0; left: 0; opacity: 1; min-height: 420px; @media (min-width: 200px) { -webkit-opacity: 0.8; -moz-opacity: 0.8; -ms-opacity: 0.8; -o-opacity: 0.8; -webkit-border-radius: 2px; -moz-border-radius: 2px; -ms-border-radius: 2px; -o-border-radius: 2px; -webkit-transition: 400ms; -moz-transition: 400ms; -o-transition: 400ms; -ms-transition: 400ms; }
}

Dependencies: NA

`;

exports[`outputs valid CSS classname 1`] = `
"const á¾©Page$Title =
/*#__PURE__*/
styled(\\"h1\\")({
  name: \\"\\\\u1FA9Page$Title\\",
  class: \\"_h6xni0\\"
});"
`;

exports[`outputs valid CSS classname 2`] = `

CSS:

._h6xni0 {
  font-size: 14px;
}

Dependencies: NA

`;

exports[`prevents class name collision 1`] = `
"const Title =
/*#__PURE__*/
styled(\\"h1\\")({
  name: \\"Title\\",
  class: \\"th6xni0\\",
  vars: {
    \\"th6xni0-0\\": [size, \\"px\\"],
    \\"th6xni0-1\\": [props => props.color]
  }
});

function more() {
  const Title =
  /*#__PURE__*/
  styled(\\"h1\\")({
    name: \\"Title\\",
    class: \\"t1u0rrat\\",
    vars: {
      \\"t1u0rrat-0\\": [regular]
    }
  });
}"
`;

exports[`prevents class name collision 2`] = `

CSS:

.th6xni0 {
  font-size: var(--th6xni0-0);
  color: var(--th6xni0-1)
}
.t1u0rrat {
    font-family: var(--t1u0rrat-0);
  }

Dependencies: NA

`;

exports[`replaces unknown expressions with CSS custom properties 1`] = `
"const Title =
/*#__PURE__*/
styled(\\"h1\\")({
  name: \\"Title\\",
  class: \\"th6xni0\\",
  vars: {
    \\"th6xni0-0\\": [size, \\"px\\"],
    \\"th6xni0-1\\": [props => props.color]
  }
});"
`;

exports[`replaces unknown expressions with CSS custom properties 2`] = `

CSS:

.th6xni0 {
  font-size: var(--th6xni0-0);
  color: var(--th6xni0-1);
}

Dependencies: NA

`;

exports[`throws when contains dynamic expression without evaluate: true in css tag 1`] = `
"<<DIRNAME>>/app/index.js: The CSS cannot contain JavaScript expressions when using the 'css' tag. To evaluate the expressions at build time, pass 'evaluate: true' to the babel plugin.
[0m [90m 1 | [39m[36mconst[39m title [33m=[39m css[32m\`[39m[0m
[0m[31m[1m>[22m[39m[90m 2 | [39m[32m  font-size: \${size}px;[39m[0m
[0m [90m   | [39m               [31m[1m^[22m[39m[0m
[0m [90m 3 | [39m[32m\`[39m[33m;[39m[0m"
`;

exports[`throws when not attached to a variable 1`] = `
"<<DIRNAME>>/app/index.js: Couldn't determine a name for the component. Ensure that it's either:
- Assigned to a variable
- Is an object property
- Is a prop in a JSX element

[0m[31m[1m>[22m[39m[90m 1 | [39mstyled[33m.[39mh1[32m\`[39m[0m
[0m [90m   | [39m[31m[1m^[22m[39m[0m
[0m [90m 2 | [39m[32m  font-size: \${size}px;[39m[0m
[0m [90m 3 | [39m[32m  color: \${props => props.color}[39m[0m
[0m [90m 4 | [39m[32m\`[39m[33m;[39m[0m"
`;

exports[`transpiles css template literal 1`] = `"const title = \\"th6xni0\\";"`;

exports[`transpiles css template literal 2`] = `

CSS:

.th6xni0 {
  font-size: 14px;
}

Dependencies: NA

`;

exports[`transpiles styled template literal with function and component 1`] = `
"const Title =
/*#__PURE__*/
styled(Heading)({
  name: \\"Title\\",
  class: \\"th6xni0\\"
});"
`;

exports[`transpiles styled template literal with function and component 2`] = `

CSS:

.th6xni0 {
  font-size: 14px;
}

Dependencies: NA

`;

exports[`transpiles styled template literal with function and tag 1`] = `
"const Title =
/*#__PURE__*/
styled('h1')({
  name: \\"Title\\",
  class: \\"th6xni0\\"
});"
`;

exports[`transpiles styled template literal with function and tag 2`] = `

CSS:

.th6xni0 {
  font-size: 14px;
}

Dependencies: NA

`;

exports[`transpiles styled template literal with object 1`] = `
"const Title =
/*#__PURE__*/
styled(\\"h1\\")({
  name: \\"Title\\",
  class: \\"th6xni0\\"
});"
`;

exports[`transpiles styled template literal with object 2`] = `

CSS:

.th6xni0 {
  font-size: 14px;
}

Dependencies: NA

`;

exports[`uses the same custom property for the same expression 1`] = `
"const Box =
/*#__PURE__*/
styled(\\"div\\")({
  name: \\"Box\\",
  class: \\"bh6xni0\\",
  vars: {
    \\"bh6xni0-0\\": [props => props.size, \\"px\\"]
  }
});"
`;

exports[`uses the same custom property for the same expression 2`] = `

CSS:

.bh6xni0 {
  height: var(--bh6xni0-0);
  width: var(--bh6xni0-0);
}

Dependencies: NA

`;

exports[`uses the same custom property for the same identifier 1`] = `
"const Box =
/*#__PURE__*/
styled(\\"div\\")({
  name: \\"Box\\",
  class: \\"bh6xni0\\",
  vars: {
    \\"bh6xni0-0\\": [size, \\"px\\"]
  }
});"
`;

exports[`uses the same custom property for the same identifier 2`] = `

CSS:

.bh6xni0 {
  height: var(--bh6xni0-0);
  width: var(--bh6xni0-0);
}

Dependencies: NA

`;
