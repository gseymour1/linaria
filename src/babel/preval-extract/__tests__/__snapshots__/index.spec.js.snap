// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`preval-extract babel plugin should create classname for \`css.named()\` tagged template literal 1`] = `"font-size: 3em;"`;

exports[`preval-extract babel plugin should create classname for \`css\` tagged template literal 1`] = `"font-size: 3em;"`;

exports[`preval-extract babel plugin should create classname for non-top-level \`css\` tagged template literal 1`] = `"font-size: 3em;"`;

exports[`preval-extract babel plugin should create classnames for multiple \`css\` tagged template literal 1`] = `"font-size: 3em;"`;

exports[`preval-extract babel plugin should create classnames for multiple \`css\` tagged template literal 2`] = `"border-radius: 4px;"`;

exports[`preval-extract babel plugin should not process file if it has \`linaria-preval\` comment 1`] = `
"'use strict';

var _templateObject = _taggedTemplateLiteral(['\\\\nfont-size: {2 + 1}em;\\\\n'], ['\\\\nfont-size: {2 + 1}em;\\\\n']);

var _css = require('./src/css');

var _css2 = _interopRequireDefault(_css);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _taggedTemplateLiteral(strings, raw) { return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

/* linaria-preval */
var header = (0, _css2.default)(_templateObject);

"
`;

exports[`preval-extract babel plugin should not process tagged template if tag is not \`css\` 1`] = `
"'use strict';

var _css = require('./src/css');

var _css2 = _interopRequireDefault(_css);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var header = '\\\\nfont-size: 3em;\\\\n';

"
`;

exports[`preval-extract babel plugin should preval const and let without transpilation to var 1`] = `
"font-size: 3em;
color: #ffffff;"
`;

exports[`preval-extract babel plugin should preval css with classname from another prevaled css 1`] = `
"padding: 2rem;

.title__1r77qux {
margin-bottom: 1rem;
}"
`;

exports[`preval-extract babel plugin with commonjs imports should preval default export 1`] = `"font-size: 14px;"`;

exports[`preval-extract babel plugin with commonjs imports should preval imported constants  1`] = `"font-size: 14px;"`;

exports[`preval-extract babel plugin with commonjs imports should preval imported constants with destructurization 1`] = `"font-size: 14px;"`;

exports[`preval-extract babel plugin with commonjs imports should preval imported module tree with constants 1`] = `"font-size: 28px;"`;

exports[`preval-extract babel plugin with commonjs imports should preval named imports 1`] = `"font-size: 36px;"`;

exports[`preval-extract babel plugin with commonjs imports should preval named imports 2`] = `"font-size: 24px;"`;

exports[`preval-extract babel plugin with extraction enabled should extract all styles to a single file 1`] = `
Array [
  "/* THIS FILE IS AUTOGENERATED. DO NOT EDIT IT DIRECTLY, NOR COMMIT IT TO VERSION CONTROL. */
.header__nzd8dy{font-size:3em;}",
  "/* THIS FILE IS AUTOGENERATED. DO NOT EDIT IT DIRECTLY, NOR COMMIT IT TO VERSION CONTROL. */
.body__j2fydj{font-weight:bold;}",
]
`;

exports[`preval-extract babel plugin with extraction enabled should extract each style to separate file and include it into source file 1`] = `
Array [
  "/* THIS FILE IS AUTOGENERATED. DO NOT EDIT IT DIRECTLY, NOR COMMIT IT TO VERSION CONTROL. */
.header__nzd8dy{font-size:3em;}",
  "/* THIS FILE IS AUTOGENERATED. DO NOT EDIT IT DIRECTLY, NOR COMMIT IT TO VERSION CONTROL. */
.body__j2fydj{font-weight:bold;}",
]
`;

exports[`preval-extract babel plugin with function calls should preval multiple function calls inside an expression 1`] = `"font-size: 33px;"`;

exports[`preval-extract babel plugin with function calls should preval with function call inside an expression 1`] = `"font-size: 28px;"`;

exports[`preval-extract babel plugin with function delcarations/expressions should preval function with flat/shallow external ids 1`] = `"font-size: 14px;"`;

exports[`preval-extract babel plugin with function delcarations/expressions should preval function with multiple nested/deep external ids 1`] = `"font-size: 28px;"`;

exports[`preval-extract babel plugin with function delcarations/expressions should preval function with nested/deep external ids 1`] = `"font-size: 15px;"`;

exports[`preval-extract babel plugin with function delcarations/expressions should preval with arrow function 1`] = `"font-size: 14px;"`;

exports[`preval-extract babel plugin with function delcarations/expressions should preval with function declaration 1`] = `"font-size: 14px;"`;

exports[`preval-extract babel plugin with function delcarations/expressions should preval with function expression 1`] = `"font-size: 14px;"`;

exports[`preval-extract babel plugin with plain objects should preval styles with deeply destructurized object 1`] = `"font-size: 3em;"`;

exports[`preval-extract babel plugin with plain objects should preval styles with deeply destructurized object and aliases 1`] = `"font-size: 3em;"`;

exports[`preval-extract babel plugin with plain objects should preval styles with deeply destructurized object, aliases and defaults 1`] = `"font-size: 3em;"`;

exports[`preval-extract babel plugin with plain objects should preval styles with nested object 1`] = `"font-size: 3em;"`;

exports[`preval-extract babel plugin with plain objects should preval styles with shallow object 1`] = `"font-size: 3em;"`;

exports[`preval-extract babel plugin with plain objects should preval styles with shallowly destructurized object 1`] = `"font-size: 3em;"`;
