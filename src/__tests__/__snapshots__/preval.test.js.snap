// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`derives display name from filename 1`] = `
"import { styled } from 'linaria/react';
export default
/*#__PURE__*/
styled(\\"h1\\")({
  name: \\"FancyName0\\",
  class: \\"FancyName0_f1yjazsq\\"
});"
`;

exports[`derives display name from filename 2`] = `

CSS:

.FancyName0_f1yjazsq {
  font-size: 14px;
}

Dependencies: NA

`;

exports[`derives display name from parent folder name 1`] = `
"import { styled } from 'linaria/react';
export default
/*#__PURE__*/
styled(\\"h1\\")({
  name: \\"FancyName0\\",
  class: \\"FancyName0_f1e8u5dq\\"
});"
`;

exports[`derives display name from parent folder name 2`] = `

CSS:

.FancyName0_f1e8u5dq {
  font-size: 14px;
}

Dependencies: NA

`;

exports[`evaluates component interpolations 1`] = `
"const {
  styled
} = require('../react');

export const Title =
/*#__PURE__*/
styled(\\"h1\\")({
  name: \\"Title\\",
  class: \\"Title_t1xha7dm\\"
});
export const Paragraph =
/*#__PURE__*/
styled(\\"p\\")({
  name: \\"Paragraph\\",
  class: \\"Paragraph_p1rsdnkv\\"
});"
`;

exports[`evaluates component interpolations 2`] = `

CSS:

.Title_t1xha7dm {
  color: red;
}
.Paragraph_p1rsdnkv {
  .Title_t1xha7dm {
    color: blue;
  }
}

Dependencies: ../react

`;

exports[`evaluates expressions with dependencies 1`] = `
"import { styled } from 'linaria/react';
import slugify from '../slugify';
export const Title =
/*#__PURE__*/
styled(\\"h1\\")({
  name: \\"Title\\",
  class: \\"Title_t1xha7dm\\"
});"
`;

exports[`evaluates expressions with dependencies 2`] = `

CSS:

.Title_t1xha7dm {
  &:before {
    content: "6og6jy"
  }
}

Dependencies: ../slugify

`;

exports[`evaluates expressions with expressions depending on shared dependency 1`] = `
"import { styled } from 'linaria/react';

const slugify = require('../slugify');

const boo = t => slugify(t) + 'boo';

const bar = t => slugify(t) + 'bar';

export const Title =
/*#__PURE__*/
styled(\\"h1\\")({
  name: \\"Title\\",
  class: \\"Title_t1xha7dm\\"
});"
`;

exports[`evaluates expressions with expressions depending on shared dependency 2`] = `

CSS:

.Title_t1xha7dm {
  &:before {
    content: "6og6jyboo6og6jybar"
  }
}

Dependencies: ../slugify

`;

exports[`evaluates identifier in scope 1`] = `
"import { styled } from 'linaria/react';
const answer = 42;

const foo = () => answer;

const days = foo() + ' days';
export const Title =
/*#__PURE__*/
styled(\\"h1\\")({
  name: \\"Title\\",
  class: \\"Title_t1xha7dm\\"
});"
`;

exports[`evaluates identifier in scope 2`] = `

CSS:

.Title_t1xha7dm {
  &:before {
    content: "42 days"
  }
}

Dependencies: NA

`;

exports[`evaluates local expressions 1`] = `
"import { styled } from 'linaria/react';
const answer = 42;

const foo = () => answer;

export const Title =
/*#__PURE__*/
styled(\\"h1\\")({
  name: \\"Title\\",
  class: \\"Title_t1xha7dm\\"
});"
`;

exports[`evaluates local expressions 2`] = `

CSS:

.Title_t1xha7dm {
  &:before {
    content: "42 days"
  }
}

Dependencies: NA

`;

exports[`evaluates multiple expressions with shared dependency 1`] = `
"import { styled } from 'linaria/react';

const slugify = require('../slugify');

const boo = t => slugify(t) + 'boo';

const bar = t => slugify(t) + 'bar';

export const Title =
/*#__PURE__*/
styled(\\"h1\\")({
  name: \\"Title\\",
  class: \\"Title_t1xha7dm\\"
});"
`;

exports[`evaluates multiple expressions with shared dependency 2`] = `

CSS:

.Title_t1xha7dm {
  &:before {
    content: "6og6jyboo"
    content: "6og6jybar"
  }
}

Dependencies: ../slugify, ../slugify

`;

exports[`handles escapes properly 1`] = `
"import { styled } from 'linaria/react';
const selectors = ['a', 'b'];
export const Block =
/*#__PURE__*/
styled(\\"div\\")({
  name: \\"Block\\",
  class: \\"Block_b3rflbm\\"
});"
`;

exports[`handles escapes properly 2`] = `

CSS:

.Block_b3rflbm {
  a { content: "\\u000A"; } b { content: "\\u000A"; }



   ;
}

Dependencies: NA

`;

exports[`handles wrapping another styled component 1`] = `
"const {
  styled
} = require('../react');

const Title =
/*#__PURE__*/
styled(\\"h1\\")({
  name: \\"Title\\",
  class: \\"Title_t1xha7dm\\"
});
export const CustomTitle =
/*#__PURE__*/
styled(Title)({
  name: \\"CustomTitle\\",
  class: \\"CustomTitle_c1rsdnkv\\"
});"
`;

exports[`handles wrapping another styled component 2`] = `

CSS:

.Title_t1xha7dm {
  color: red;
}
.CustomTitle_c1rsdnkv.Title_t1xha7dm {
  font-size: 24px;
  color: blue;
}

Dependencies: NA

`;

exports[`ignores external expressions 1`] = `
"import { styled } from 'linaria/react';

const generate = props => props.content;

export const Title =
/*#__PURE__*/
styled(\\"h1\\")({
  name: \\"Title\\",
  class: \\"Title_t1xha7dm\\",
  vars: {
    \\"t1xha7dm-0\\": [generate]
  }
});"
`;

exports[`ignores external expressions 2`] = `

CSS:

.Title_t1xha7dm {
  &:before {
    content: "var(--t1xha7dm-0)"
  }
}

Dependencies: NA

`;

exports[`ignores inline arrow function expressions 1`] = `
"import { styled } from 'linaria/react';
export const Title =
/*#__PURE__*/
styled(\\"h1\\")({
  name: \\"Title\\",
  class: \\"Title_t1xha7dm\\",
  vars: {
    \\"t1xha7dm-0\\": [props => props.content]
  }
});"
`;

exports[`ignores inline arrow function expressions 2`] = `

CSS:

.Title_t1xha7dm {
  &:before {
    content: "var(--t1xha7dm-0)"
  }
}

Dependencies: NA

`;

exports[`ignores inline vanilla function expressions 1`] = `
"import { styled } from 'linaria/react';
export const Title =
/*#__PURE__*/
styled(\\"h1\\")({
  name: \\"Title\\",
  class: \\"Title_t1xha7dm\\",
  vars: {
    \\"t1xha7dm-0\\": [function (props) {
      return props.content;
    }]
  }
});"
`;

exports[`ignores inline vanilla function expressions 2`] = `

CSS:

.Title_t1xha7dm {
  &:before {
    content: "var(--t1xha7dm-0)"
  }
}

Dependencies: NA

`;

exports[`inlines object styles as CSS string 1`] = `
"import { styled } from 'linaria/react';

const fill = (top = 0, left = 0, right = 0, bottom = 0) => ({
  position: 'absolute',
  top,
  right,
  bottom,
  left
});

export const Title =
/*#__PURE__*/
styled(\\"h1\\")({
  name: \\"Title\\",
  class: \\"Title_t1xha7dm\\"
});"
`;

exports[`inlines object styles as CSS string 2`] = `

CSS:

.Title_t1xha7dm {
  position: absolute; top: 0; right: 0; bottom: 0; left: 0;
}

Dependencies: NA

`;

exports[`throws codeframe error when evaluation fails 1`] = `
"<<DIRNAME>>/source.js: An error occurred when evaluating the expression: This will fail. Make sure you are not using a browser or Node specific API.
  4 | 
  5 | export const Title = styled.h1\`
> 6 |   font-size: \${foo()}px;
    |                ^
  7 | \`;"
`;

exports[`throws if couldn't determine a display name 1`] = `
"<<DIRNAME>>/.js: Couldn't determine a name for the component. Ensure that it's either:
- Assigned to a variable
- Is an object property
- Is a prop in a JSX element

  1 | import { styled } from 'linaria/react';
  2 | 
> 3 | export default styled.h1\`
    |                ^
  4 |   font-size: 14px;
  5 | \`;"
`;

exports[`throws when interpolation evaluates to NaN 1`] = `
"<<DIRNAME>>/source.js: The expression evaluated to 'NaN', which is probably a mistake. If you want it to be inserted into CSS, explicitly cast or transform the value to a string, e.g. - 'String(height)'.
  4 | 
  5 | export const Title = styled.h1\`
> 6 |   height: \${height}px;
    |             ^
  7 | \`;"
`;

exports[`throws when interpolation evaluates to an array 1`] = `
"<<DIRNAME>>/source.js: The expression evaluated to '[\\"2px\\",\\"0\\",\\"2px\\"]', which is probably a mistake. If you want it to be inserted into CSS, explicitly cast or transform the value to a string, e.g. - 'String(borderRadius)'.
  4 | 
  5 | export const Title = styled.h1\`
> 6 |   border-radius: \${borderRadius}px;
    |                    ^
  7 | \`;"
`;

exports[`throws when interpolation evaluates to null 1`] = `
"<<DIRNAME>>/source.js: The expression evaluated to 'null', which is probably a mistake. If you want it to be inserted into CSS, explicitly cast or transform the value to a string, e.g. - 'String(color)'.
  4 | 
  5 | export const Title = styled.h1\`
> 6 |   color: \${color};
    |            ^
  7 | \`;"
`;

exports[`throws when interpolation evaluates to undefined 1`] = `
"<<DIRNAME>>/source.js: The expression evaluated to 'undefined', which is probably a mistake. If you want it to be inserted into CSS, explicitly cast or transform the value to a string, e.g. - 'String(fontSize)'.
  4 | 
  5 | export const Title = styled.h1\`
> 6 |   font-size: \${fontSize};
    |                ^
  7 | \`;"
`;
